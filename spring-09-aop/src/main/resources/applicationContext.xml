<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.wang.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.wang.log.BeforeLog"/>
    <bean id="afterReturnLog" class="com.wang.log.AfterReturnLog"/>

    <!-- 方式一：使用原生Spring API接口-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 配置切入点, execution(要执行的位置)&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.wang.service.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash; 执行环绕增加 &ndash;&gt;-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterReturnLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

    <!-- 方式二：自定义类-->
<!--    <bean id="diy" class="com.wang.diy.DIY"/>-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 自定义切面，ref要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash; 切入点 &ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.wang.service.UserServiceImpl.*(..))"/>-->
<!--            &lt;!&ndash; 通知 &ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!-- 方式二：自定义类-->
    <bean id="annotationPointCut" class="com.wang.diy.AnnotationPointCut"/>
    <!-- 开启注解支持   动态代理JDK(默认 proxy-target-class="false")  cglib(proxy-target-class="true") -->
    <aop:aspectj-autoproxy proxy-target-class="false"/>

</beans>